      SUBROUTINE T2D( BUFIN, NSAMPS, ST, SIT, BUFOUT, MSAMPS, SD, SID,
     &  SCRBUF, AVEVEL)
!     T2D CONVERTS A TIME TRACE (BUFIN) INTO A DEPTH TRACE (BUFOUT) USING
!  AVERAGE VELOCITIES (AVEVEL). THE TIMES ARE ONE WAY TRAVEL TIMES.
!  T2D EXPECTS A VELOCITY ARRAY IN A CONSTANT TIME INCREMENT (A VELOCITY FOR
!  EVERY SAMPLE).
!     T2D APPLIES A VELOCITY TRANSFORMATION TO A TIME DOMAIN TRACE TO GET
!  A DEPTH DOMAIN TRACE.  THE OUTPUT TRACE IS AT A UNIFORM SAMPLE INTERVAL, SO
!  IT IS READY TO BE PLOTTED IN THE NORMAL MANNER.
!  ARGUMENTS:
!   BUFIN  - AN ARRAY OF DATA TO BE MOVED (TRANSFORMED).  A TIME DOMAIN TRACE.
!   NSAMPS - THE INTEGER NUMBER OF SAMPLES IN ARRAY BUFIN.  THE LENGTH OF THE
!            THE INPUT DATA.
!   ST     - THE START TIME OF BUFIN.  THE TIME IN SECONDS ASSOCIATED WITH THE
!            SAMPLE BUFIN(1).
!   SIT    - SAMPLE INTERVAL IN TIME.  THE TIME UNITS, IN SECONDS, BETWEEN
!            SUCCESSIVE SAMPLES IN BUFIN.
!   BUFOUT - AN ARRAY TO RECEIVED THE TRANSFORMED TRACE.  THE DEPTH DOMAIN TRACE
!            THE OUTPUT ARRAY.  MUST BE DIFFERENT FROM BUFIN.
!   MSAMPS - THE NUMBER OF OUTPUT SAMPLES.  T2D WILL ONLY STORE MSAMPS SAMPLES
!            IN THE OUTPUT ARRAY.
!   SD     - START DEPTH.  THE DEPTH OF THE FIRST OUTPUT SAMPLE (BUFOUT(1)).
!   SID    - SAMPLE INTERVAL IN THE DEPTH DOMAIN.  THE  DISTANCE BETWEEN
!            SUCCESSIVE OUTPUT SAMPLES.
!   SCRBUF - A SCRATCH ARRAY OF LENGTH NSAMPS.
!   AVEVEL - AN ARRAY OF AVERAGE VELOCITIES ASSOCIATED WITH EACH SAMPLE (OR TIME
!            OF BUFIN.)  AVEVEL MUST BE NSAMPS LONG - ONE VELOCITY FOR EVERY TIME
!            SAMPLE.  THESE ARE ONE WAY TRAVEL TIMES!!!!
!
!      PAUL HENKART, SCRIPPS INSTITUTION OF OCEANOGRAPHY, APRIL 1979
!
      DIMENSION BUFIN(1),BUFOUT(1),SCRBUF(1),AVEVEL(1)
      INTEGER LINC, LTEMP, sd
!
!    CALCULATE A DEPTH FOR EVERY TIME SAMPLE.  ROUND THE DEPTH TO THE
!    NEAREST DEPTH SAMPLE INTERVAL BY ADDING HALF THE INTERVAL BEFORE
!    TRUNCATING BY MAKING IT INTO AN INTEGER.  DIVIDING THE INTEGER DEPTH
!    BY THE INTEGER SAMPLE INTERVAL AND THEN MULTIPLYING BY THE SAMPLE
!    INTERVAL THEN ASSURES THAT THE RESULTANT DEPTH IS A MULTIPLE OF THE
!    SAMPLE INTERVAL.
!
!   mod 13 Oct 08 - do depth as real number
!
      sdepth = REAL(sd)
      LINC=SID                                                          ! MAKE THE SAMPLE INTERVAL AN INTEGER
      SID2=SID/2.
!****
!****  fill scrbuf with the depth of every output sample
!****
      DO 10 I = 1, NSAMPS
         TIME = ST+SIT*FLOAT(I-1)
!         LTEMP = TIME*AVEVEL(I)+SID2
!         LTEMP = (LTEMP/LINC)*LINC
         ltemp = NINT( TIME*AVEVEL(I) )
!         SCRBUF(I) = LTEMP
          scrbuf(i) = time * avevel(i)
   10 CONTINUE
!
!    FIND THE CLOSEST DEPTH IN THE CONVERTED DEPTH ARRAY FOR EVERY
!    OUTPUT DEPTH SAMPLE.  THE OUTPUT DEPTH ARRAY IS A UNIFORMLY SAMPLED
!    ARRAY BUT THE CONVERTED (TIME) ARRAY IS NOT.  USE WHATEVER CONVERTED
!    ARRAY POINT THAT IS CLOSEST, THUS ALLOWING THE SAME POINT TO APPEAR
!    IN THE OUTPUT ARRAY OR SKIPPING SOME.
!
      INDXT=1                                                           ! THE INDEX TO THE CONVERTED TIME ARRAY
      INDXD=0                                                           ! THE INDEX TO THE OUTPUT DEPTH ARRAY
!
  110 INDXD=INDXD+1
      IF(INDXD.GT.MSAMPS) RETURN
      DEPTH = sdepth + (INDXD-1) * SID                                  ! CALCULATE THE NEXT DEPTH VALUE
  120 CONTINUE
      IF(DEPTH.GE.SCRBUF(INDXT)) GO TO 200
      IF(DEPTH.GE.SCRBUF(INDXT-1)) GO TO 130
!**** the depth wanted is before the one we're at, so back up
      INDXT=INDXT-1
      IF(INDXT.GT.0) GO TO 120
      BUFOUT(INDXD)=0.                                                  ! THE OUTPUT IS BEFORE THE INPUT!
      INDXT=1
      GO TO 110
!****
!**** the depth is between this one and the prior one, use the prior one
  130 BUFOUT(INDXD)=BUFIN(INDXT-1)
      GO TO 110
!****
!****  if the depth is after this one, go to the next one
  200 IF(DEPTH.GT.SCRBUF(INDXT)) GO TO 300
!***
!***  the depth is the same as this one, use it!
      BUFOUT(INDXD)=BUFIN(INDXT)
      GO TO 110
!****
!****  set up to try the next sample
  300 INDXT=INDXT+1
      IF(INDXT.LE.NSAMPS) GO TO 120
      DO I=INDXD,MSAMPS
  310    BUFOUT(I)=0.
      ENDDO
      RETURN
      END
