      SUBROUTINE MUTEED(BUF,LBUF)
!                               PROCESS MUTE
!                               ------- ----
!
!  DOCUMENT DATE: 27 FEBRUARY 1987
!
!     PROCESS MUTE ZEROES THE BEGINNING OF SELECTED TRACES.  A MUTE IS USED TO
!  SILENCE THE NOISE PRECEEDING THE FIRST ARRIVALS.  MUTES ARE APPLIED TO
!  MARINE DATA TO ELIMINATE THE WATER COLUMN.  THE BEGINNING OF THE MUTE IS
!  TIME ZERO OR THE DEEP WATER DELAY.  THE USER MUST SPECIFY THE END TIME OF
!  THE MUTE.  THE MUTE TIMES MAY BE VARIED SPATIALLY BY SHOT OR BY RP.
!  THE MUTES MAY BE GIVEN BY TRACE NUMBER OR BY RANGE (DISTANCE FROM THE SHOT).
!  THE MUTES MAY BE GIVEN RELATIVE TO TIME ZERO OR RELATIVE TO THE WATER BOTTOM
!  TIMES.  A 5 SAMPLE RAMP IS APPLIED TO THE MUTE WINDOW IN ORDER TO AVOID
!  DISCONTINUITIES.
!     ALL PARAMETERS THAT REMAIN CONSTANT FOR A SET OF SHOTS (RPS) MAY BE
!  DESCRIBED IN A PARAMETER SET FNO TO LNO.  MUTE TIMES BETWEEN TWO PARAMETER
!  SETS ARE CALCULATED BY LINEARLY INTERPOLATING BETWEEN LNO OF ONE SET AND FNO
!  OF THE NEXT SET.
!     EACH PARAMETER LIST MUST BE TERMINATED WITH THE WORD END.  THE ENTIRE SET
!  OF MUTE PARAMETERS MUST BE TERMINATED BY THE WORD END.
!
!  THE PARAMETER DICTIONARY
!  --- --------- ----------
!  FNO    - THE FIRST SHOT (OR RP) TO APPLY THE MUTES TO.  SHOT (RP) NUMBERS
!           MUST INCREASE MONOTONICALLY.
!           PRESET=1
!  LNO    - THE LAST SHOT (RP) NUMBER TO APPLY THE MUTES TO.  LNO MUST BE
!           LARGER THAN FNO IN EACH LIST AND MUST INCREASE LIST TO LIST.
!           DEFAULT=FNO
!  XTP    - RANGE-TIME-PAIRS.  A LIST OF RANGE AND MUTE TIME PAIRS.  MUTE TIMES
!           FOR RANGES NOT SPECIFIED ARE OBTAINED THROUGH LINEAR INTERPOLATION
!           IF THE RANGE IS BETWEEN TWO RANGES SPECIFIED.  TRACES WITH
!           A RANGE LESS THAN THE SMALLEST GIVEN RANGE WILL BE MUTED TO THE MUTE
!           TIME OF THE SMALLEST GIVEN RANGE.  LIKEWISE, RANGES LARGER THAN THE
!           LARGEST GIVEN RANGE WILL BE MUTED TO THE MUTE TIME OF THE LARGEST
!           GIVEN RANGE.  XTP MUST BE GIVEN WITH INCREASING RANGES.  THE PROGRAM
!           COMPUTES THE ABSOLUTE VALUE OF BOTH USER RANGES AND DATA RANGES.
!           E.G. XTP 1000 3.0 2000 4.0  - TRACES WITH RANGES LESS THAN 1000 WILL
!           BE MUTED TO 3. SECONDS, TRACES WITH RANGES GREATER THAN 2000 WILL
!           BE MUTED TO 4. SECONDS, AND TRACES WITH RANGE BETWEEN 1000 AND
!           2000 WILL BE MUTED BETWEEN 3. AND 4. SECONDS (PROPORIONATELY).
!           PRESET=NONE
!  TTP    - TRACE NUMBER-TIME-PAIRS.  A LIST OF TRACE NUMBERS (OF A SHOT OR RP)
!           AND MUTE TIMES (LISTED IN PAIRS).  THE MUTE TIME FOR A TRACE BETWEEN
!           TWO TRACES THAT ARE SPECIFIED IS OBTAINED THROUGH LINEAR INTER-
!           POLATION OF THE MUTE TIMES OF THE SPECIFIED TRACES. TRACES WITH A
!           TRACE NUMBER LESS THAN THE SMALLEST GIVEN WILL BE MUTED TO THE MUTE
!           TIME OF THE SMALLEST TRACE NUMBER.  LIKEWISE, TRACES WITH A TRACE
!           NUMBER LARGER THAN THE LARGEST GIVEN WILL BE MUTED TO THE MUTE TIME
!           OF THE LARGEST GIVEN.  TTP MUST BE GIVEN IN INCREASING TRACE NUMBERS.
!           E.G.  TTP 4 2. 20 5. - TRACES 1 THRU 4 WILL BE MUTED TO 2. SECONDS,
!           TRACES 20 AND UP WILL BE MUTED TO 5. SECONDS, AND TRACES 5 THRU 19
!           WILL BE MUTED BETWEEN 2. AND 5. SECONDS (PROPORTIONATELY).
!           PRESET=NONE
!  ADDWB  - WHEN GIVEN A VALUE OF YES, THE MUTE TIMES GIVEN VIA XTP OR TTP WILL
!           BE ADDED TO THE WATER BOTTOM TIME OF THE TRACE.  (WATER BOTTOM TIMES
!           MAY BE ENTERED VIA PROCESS WBT).
!           PRESET=NO
c  WBDVEL - Water bottom depth to time conversion velocity.  WBDVEL indicates
c           that the water bottom depth should be used rather than the water
c           bottom time WHEN ADDWB IS ALSO GIVEN.  The velocity given should be
c           the two way velocity (e.g. 1500) to convert depth to time. 
c           preset = 0    e.g.  addwb yes wbtvel 1500
!  END    - TERMINATES EACH PARAMETER LIST.
!
!  NOTE *****
!  1)  EITHER XTP OR TTP MUST BE GIVEN.
!  2)  ALL TIMES ARE IN SECONDS.
!
!
!  WRITTEN AND COPYRIGHTED BY:
!  PAUL HENKART, SCRIPPS INSTITUTION OF OCEANOGRAPHY, MARCH 1980
!  ALL RIGHTS ARE RESERVED BY THE AUTHOR.  PERMISSION TO COPY OR REPRODUCE THIS
!  SUBROUTINE, BY COMPUTER OR OTHER MEANS, MAY BE OBTAINED ONLY FROM THE AUTHOR.
!
!
!   THE PARAMETER LIST PASSED TO MUTEEX ON THE DISC LOOKS LIKE:
!    WORD 1)  FNO (32 BIT INTEGER)
!         2)  LNO (32 BIT INTEGER)
!         3)  ADDWB (32 BIT INTEGER)
!         4)  NS (32 BIT INTEGER)  - THE NUMBER OF WORDS IN XTP OR TTP
!         5)  LTYPE (32 BIT INTEGER) - 'XTP ' OR 'TTP '
!         6)  LPRINT (32 BIT INTEGER)
!         7) - MAXXTP+NPARS) - XTP OR TTP ARRAY
!
!  ARGUMENTS:
!  BUF    - A SCRATCH ARRAY AT LEAST 60 32 BIT WORDS LONG.
!  LBUF   - THE SAME ARRAY BUT THE 32 BIT INTEGER EQUIVALENT.  NEEDED
!           BECAUSE PRIME FORTRAN DOESN'T ALLOW EQUIVALENCING OF ARGUMENTS.
!
      PARAMETER (NPARS=7)                                               ! THE NUMBER OF USER PARAMETERS
      PARAMETER (MAXXTP=500)                                            ! THE MAXIMUM NUMBER OF TTPS OR XTPS THAT MUTEEX CAN HANDLE
      PARAMETER (NWRDS=MAXXTP+NPARS)
      PARAMETER (MULTI=6)                                               ! THE FIRST MULTI-VALUED PARAMETER
      COMMON /MUTER/ MUNIT,NLISTS
      DIMENSION BUF(1000),LBUF(1000)
      INTEGER FNO
      CHARACTER*6 NAMES(NPARS)
      CHARACTER*1 TYPES(NPARS)
      DIMENSION LENGTH(NPARS)
      CHARACTER*80 TOKEN
      DIMENSION VALS(NPARS),LVALS(NPARS)
      EQUIVALENCE (vals(1),lvals(1))
      COMMON /EDITS/ IERROR,IWARN,IRUN,NOW,ICOMPT
!
!
      EQUIVALENCE (FNO,LVALS(1)),
     2            (LNO,LVALS(2)),
     3            (ADDWB,LVALS(3)),
     4            (LPRINT,LVALS(4)),
     5            (wbdvel,vals(5)),
     6            (XTP,VALS(6)),
     7            (TTP,VALS(6))
      DATA NAMES/'FNO   ','LNO   ','ADDWB ','LPRINT','WBDVEL',
     *           'XTP   ','TTP   '/
      DATA TYPES /'L','L','A','L','F','F','F'/
      DATA LENGTH /3,3,5,6,6,3,3/
!****
!****      SET THE PRESETS
!****
      FNO=1
      LNO=32768
      XTP=-1.
      IADDWB=0
      LLNO = 0
      NLISTS=0
      NS=0
      LPRINT=0
      LTYPE=0                                                           ! LTYPE=1 MEANS XTP, =2 MEAN TTP
      wbdvel = 0
      CALL GETFIL(1,MUNIT,token,ISTAT)                                  ! GET A DISK FILE FOR THE PARAMETERS
!****
!****   THE CURRENT COMMAND LINE IN THE SYSTEM BUFFER MAY HAVE THE PARAMETERS.
!****   GET A PARAMETER LIST FROM THE USER.
!****
      NTOKES=1
  100 CONTINUE
      CALL GETOKE(TOKEN,NCHARS)                                         ! GET A TOKEN FROM THE USER PARAMETER LINE
      CALL UPCASE(TOKEN,NCHARS)                                         ! CONVERT THE TOKEN TO UPPERCASE
      IF(NCHARS.GT.0) GO TO 150
      IF(NOW.EQ.1) PRINT 140
  140 FORMAT(' <  ENTER PARAMETERS  >')
      CALL RDLINE                                                       ! GET ANOTHER USER PARAMETER LINE
      NTOKES=0
      GO TO 100
  150 CONTINUE
      NTOKES=NTOKES+1
      DO 190 I=1,NPARS                                                  ! SEE IF IT IS A PARAMETER NAME
      LEN=LENGTH(I)                                                     ! GET THE LEGAL PARAMETER NAME LENGTH
      IPARAM=I                                                          ! SAVE THE INDEX
      IF(TOKEN(1:NCHARS).EQ.NAMES(I)(1:LEN).AND.NCHARS.EQ.LEN) GO TO 200
  190 CONTINUE                                                          ! STILL LOOKING FOR THE NAME
      IF(TOKEN(1:NCHARS).EQ.'END'.AND.NCHARS.EQ.3) GO TO 1000           ! END OF PARAM LIST?
      IF(NS.NE.0) GO TO 230
      PRINT 191, TOKEN(1:NCHARS)
  191 FORMAT(' ***  ERROR  *** MUTE DOES NOT HAVE A PARAMETER ',
     *  'NAMED ',A10)
      IERROR=IERROR+1
      GO TO 100
!****
!****    FOUND THE PARAMETER NAME, NOW FIND THE VALUE
!****
  200 CONTINUE
      NPARAM=IPARAM
  210 CONTINUE                                                          !  NOW FIND THE VALUE
      CALL GETOKE(TOKEN,NCHARS)
      CALL UPCASE(TOKEN,NCHARS)
      NTOKES=NTOKES+1
      IF(NCHARS.GT.0) GO TO 230                                         ! END OF LINE?
      IF(NOW.EQ.1) PRINT 140                                            ! THIS ALLOWS A PARAMETER TO BE ON A DIFFERENT LINE FROM THE NAME
      CALL RDLINE                                                       ! GET ANOTHER LINE
      NTOKES=0
      GO TO 210
  230 CONTINUE
      IF(TYPES(NPARAM).NE.'A') GO TO 240
      IF(NAMES(NPARAM).EQ.'ADDWB'.AND.TOKEN(1:NCHARS).EQ.'YES')
     *    IADDWB=1
      GO TO 100
  240 CONTINUE
      CALL DCODE(TOKEN,NCHARS,AREAL,ISTAT)                              ! TRY AND DECODE IT
      IF(ISTAT.EQ.2) GO TO 420                                          ! =2 MEANS IT IS A NUMERIC
      IERROR=IERROR+1                                                   ! DCODE PRINTED AN ERROR
      GO TO 100
  420 IF(TYPES(NPARAM).EQ.'L') GO TO 500
      IF(NPARAM.LT.MULTI) GO TO 490                                     !  IS IT A MULTIVALUED PARAMETER
      NS=NS+1                                                           !  THE TOKEN WAS A MULTI-VALUED PARAMETER
      BUF(NS+NPARS)=AREAL
      IF(NPARAM.EQ.MULTI) LTYPE=1
      IF(NPARAM.EQ.NPARS) LTYPE=2
      GO TO 100
  490 VALS(NPARAM)=AREAL                                                !  FLOATING POINT VALUES
      GO TO 100
  500 CONTINUE                                                          !  32 BIT INTEGER VALUES
      LVALS(NPARAM)=AREAL
      GO TO 100
!****
!****   FINISHED A LIST, NOW DO THE ERROR AND VALIDITY CHECKS
!****
 1000 CONTINUE                                                          ! MAKE SURE ALL SHOT & RP NUMBERS INCREASE
      IF(LNO.EQ.32768) LNO=FNO                                          ! DEFAULT LNO TO FNO
      IF(FNO.GT.LLNO .OR. fno .EQ. 0 ) GO TO 1020                       !  IS FNO LARGER THAN THE LAST LNO
      PRINT 1010
 1010 FORMAT(' ***  ERROR  ***  SHOT AND RP NUMBERS MUST INCREASE.')
      IERROR=IERROR+1
 1020 IF(LNO.GE.FNO) GO TO 1030                                         ! DO THEY INCREASE IN THIS LIST
      PRINT 1010
      IERROR=IERROR+1
 1030 LLNO=LNO
 1100 CONTINUE                                                          ! MAKE SURE THAT EITHER XTP OR TTP IS GIVEN
      IF(LTYPE.NE.0.) GO TO 1120
      PRINT 1110
 1110 FORMAT(' ***  ERROR  ***  XTP OR TTP MUST BE GIVEN.')
      IERROR=IERROR+1
 1120 CONTINUE                                                          !  MAKE SURE THE RANGES OF XTP INCREASE
      IF(LTYPE.NE.1) GO TO 1200
      DO I=1,NS,2
 1130    BUF(NPARS+I)=ABS(BUF(NPARS+I))                                    ! USE THE ABS VALUE OF THE RANGES
      ENDDO
      IF(NS.LE.2) GO TO 1300
      DO 1150 I=3,NS,2
      IF(BUF(NPARS+I).GT.BUF(NPARS+I-2)) GO TO 1150
      PRINT 1140
 1140 FORMAT(' ***  ERROR  ***  THE RANGES OF XTP MUST INCREASE.')
      IERROR=IERROR+1
 1150 CONTINUE
      GO TO 1300
 1200 CONTINUE                                                          !  CHECK THE TTP PARAMETER
      DO 1220 I=1,NS,2
      IF(BUF(NPARS+I).GE.0.) GO TO 1220                                 ! ALLOW A TRACE NUMBER OF ZERO
      PRINT 1210
 1210 FORMAT(' ***  ERROR  ***  ILLEGAL TTP.')
      IERROR=IERROR+1
 1220 CONTINUE
      IF(NS.LE.2) GO TO 1300
      DO 1230 I=3,NS,2
      IF(BUF(NPARS+I).GT.BUF(NPARS+I-2)) GO TO 1230
      PRINT 1210
      IERROR=IERROR+1
 1230 CONTINUE
 1300 CONTINUE                                                          !  MAKE CHECKS COMMON TO BOTH XTP AND TTP
      IF(MOD(NS,2).EQ.0) GO TO 1320
      PRINT 1310
 1310 FORMAT(' ***  ERROR  ***  MUTES MUST BE IN PAIRS.')
      IERROR=IERROR+1
 1320 CONTINUE                                                          !  MAKE SURE THE TIMES ARE OK
      DO 1340 I=1,NS,2
      IF(BUF(NPARS+I+1).GE.-10..AND.BUF(NPARS+I+1).LT.50.) GO TO 1340
      PRINT 1330,BUF(NPARS+I+3)
 1330 FORMAT(' ***  ERROR  ***  ILLEGAL MUTE TIME OF ',F10.4)
      IERROR=IERROR+1
 1340 CONTINUE
      IF( wbdvel .LT. 0. .OR. wbdvel .GT. 10000. ) THEN
          PRINT *,' ***  ERROR  ***  WBDVEL must be > 0. and <10000.'
          ierror = ierror + 1
      ENDIF
!****
!****      WRITE THE PARAMETER LIST TO DISC
!****
      IF(NS.LE.MAXXTP) GO TO 1360
      ITEMP=MAXXTP/2
      PRINT 1350,ITEMP
 1350 FORMAT(' ***  ERROR  ***  MUTE CAN HANDLE ONLY ',I3,' MUTES.')
      IERROR=IERROR+1
 1360 CONTINUE
      LBUF(1)=FNO
      LBUF(2)=LNO
      LBUF(3)=IADDWB
      LBUF(4)=NS
      LBUF(5)=LTYPE
      LBUF(6)=LPRINT
      buf(7) = wbdvel
      ITEMP=NPARS+1
      ITEMP1=NPARS+NS
      IF(IAND(LPRINT,1).EQ.1)  PRINT 2010,(LBUF(I),I=1,6),buf(7),
     *   (BUF(J),J=ITEMP,ITEMP1)
 2010 FORMAT(' MUTE PARAMS:',/,6(1X,I10),/,
     *   5(10(1X,F10.3),/))
      CALL WRDISC(MUNIT,BUF,NWRDS)
      NLISTS=NLISTS+1
      NS=0
      LNO=32768                                                         ! DEFAULT THE DEFAULTS
 2020 CALL GETOKE(TOKEN,NCHARS)                                         ! GET THE NEXT TOKEN
      CALL UPCASE(TOKEN,NCHARS)
      NTOKES=NTOKES+1
      IF(NCHARS.GT.0) GO TO 2030                                        ! WAS IT THE END OF A LINE?
      IF(NOW.EQ.1) PRINT 140
      CALL RDLINE                                                       ! GET ANOTHER LINE
      NTOKES=0
      GO TO 2020
 2030 IF(TOKEN(1:NCHARS).NE.'END'.OR.NCHARS.NE.3) GO TO 150
      RETURN                                                            !  FINISHED ALL OF THE PARAMETERS!!!
      END
