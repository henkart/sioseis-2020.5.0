      FUNCTION ran1( idum )
!     Returns a uniform random deviate between 0.0 and 1.0.  Set IDUM
! to any negative value to initialize or reinitialize the sequence.
!     From "Numerical Recipes" by Press, Flannery, Teulolsky, Vetterling
!
      PARAMETER ( m1 = 259200, ia1 = 7141, ic1 = 54773, rm1 = 1./m1 )
      PARAMETER ( m2 = 134456, ia2 = 8191, ic2 = 28411, rm2 = 1./m2 )
      PARAMETER ( m3 = 243000, ia3 = 4561, ic3 = 51349 )
      DIMENSION r(97)
      SAVE 
      DATA iff/0/
!        initialize on first call even if IDUM is not negative
      IF( idum .LT. 0 .OR. iff .EQ. 0 ) THEN
          iff = 1
          ix1 = MOD( ic1-idum, m1 )                                     ! seed the first routine
          ix1 = MOD( ia1*ix1+ic1, m1 )
          ix2 = MOD( ix1, m2 )                                          ! and use it to seed the second
          ix1 = MOD( ia1*ix1+ic1, m1 )
          ix3 = MOD( ix1, m3 )                                          ! and third routines.
          DO 100 j = 1, 97                                              ! fill the table with sequential uniform
             ix1 = MOD( ia1*ix1+ic1, m1 )                               ! deviates generated by the first two routines.
             ix2 = MOD( ia2*ix2+ic2, m2 )
             r(j) = ( FLOAT(ix1) + FLOAT(ix2) * rm2 ) * rm1             ! low and high-order pieces combine here
  100     CONTINUE
          idum = 1
      ENDIF
      ix1 = MOD( ia1*ix1+ic1, m1 )                                      ! except when initializing, this is where we start.
      ix2 = MOD( ia2*ix2+ic2, m2 )                                      ! generate the next number for each sequence.
      ix3 = MOD( ia3*ix3+ic3, m3 )
      j = 1 + (97*ix3) / m3                                             ! use the third sequence to get an integer between 1 and 97
      IF( j .GT. 97 .OR. j .LT. 1 ) THEN
          PRINT *,' ***  ERROR  *** function ran1 blew up.'
          STOP
      ENDIF
      ran1 = r(j)                                                       ! return that table entry
      r(j) = ( FLOAT(ix1) + FLOAT(ix2) * rm2 ) * rm1                    ! and refill it
      RETURN
      END
